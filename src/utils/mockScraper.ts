/**
 * Simulador de scraping do Airbnb para desenvolvimento e quando a API estiver offline
 */

interface MockScraperResult {
    title: string;
    description: string;
    type: string;
    address: string;
    bedrooms: number;
    bathrooms: number;
    beds: number;
    pricePerNight: number;
    guests: number;
    amenities: string[];
    amenitiesWithIcons?: any[];
    categorizedAmenities: Record<string, string[]>;
    images: string[];
    sourceUrl: string;
}

// Lista de amenidades simuladas
const mockAmenities = [
    'Wi-Fi', 'TV', 'Cozinha completa', 'M√°quina de lavar',
    'Ar condicionado', 'Aquecimento', 'Jacuzzi', 'Piscina',
    'Estacionamento gratuito', 'Academia', 'Secador de cabelo',
    'Ferro de passar', 'Itens essenciais', 'Ber√ßo', 'Elevador',
    'Caf√© da manh√£', 'Espa√ßo de trabalho', 'Alarme de inc√™ndio',
    'Detector de mon√≥xido de carbono'
];

// Lista de imagens de exemplo para usar quando offline
const mockImages = [
    '/card1.jpg',
    '/card2.jpg',
    '/card3.jpg',
    '/card4.jpg'
];

/**
 * Simula uma importa√ß√£o do Airbnb para desenvolvimento local
 * @param url URL do Airbnb (ignorada no modo simulado)
 * @returns Dados simulados de propriedade
 */
export function mockScrapeAirbnb(url: string): Promise<MockScraperResult> {
    console.log('üî∏ Usando o simulador de scraping para a URL:', url);

    // Extrair o ID da propriedade da URL, se dispon√≠vel
    let propertyId = 'mockProperty';
    try {
        const match = url.match(/\/rooms\/(\d+)/);
        if (match && match[1]) {
            propertyId = match[1];
        }
    } catch (e) {
        console.warn('N√£o foi poss√≠vel extrair ID da propriedade da URL');
    }

    // Simular um tempo de resposta realista
    return new Promise((resolve) => {
        setTimeout(() => {
            // Selecionar aleatoriamente entre 8-15 amenidades
            const numAmenities = Math.floor(Math.random() * 8) + 8;
            const selectedAmenities = [...mockAmenities]
                .sort(() => 0.5 - Math.random())
                .slice(0, numAmenities);

            // Categorizar amenidades
            const categorizedAmenities = {
                'B√°sico': selectedAmenities.slice(0, 4),
                'Cozinha e refei√ß√µes': selectedAmenities.slice(4, 6),
                'Caracter√≠sticas': selectedAmenities.slice(6, 8),
                'Seguran√ßa': selectedAmenities.slice(8),
            };

            // Criar resultado simulado
            const result: MockScraperResult = {
                title: `Apartamento em S√£o Paulo #${propertyId}`,
                description: 'Este lindo apartamento est√° localizado no cora√ß√£o da cidade, pr√≥ximo a restaurantes, caf√©s e atra√ß√µes tur√≠sticas. Totalmente reformado com acabamentos de luxo, oferece uma estadia confort√°vel para quem procura relaxar depois de um dia agitado.',
                type: 'Apartamento',
                address: 'Rua Exemplo, 123 - S√£o Paulo, SP',
                bedrooms: Math.floor(Math.random() * 3) + 1,
                bathrooms: Math.floor(Math.random() * 2) + 1,
                beds: Math.floor(Math.random() * 4) + 1,
                pricePerNight: Math.floor(Math.random() * 500) + 150,
                guests: Math.floor(Math.random() * 6) + 2,
                amenities: selectedAmenities,
                categorizedAmenities,
                images: [...mockImages],
                sourceUrl: url
            };

            resolve(result);
        }, 1500); // Simular uma requisi√ß√£o de 1.5 segundos
    });
} 